crit_colors <- colorRampPalette(c("#03034b",
"#300b4b",
"#530541",
"#75032f",
"#9c340a",
"#d76b02",
"#f09a06",
"#f4d146"))
crit_colors(5)
?crit_colors
?colorRampPalette
crit_colors(5, alpha = 0.5)
col2rgb(c("#03034b",
"#300b4b",
"#530541",
"#75032f",
"#9c340a",
"#d76b02",
"#f09a06",
"#f4d146"))
critcolors.map <- t(col2rgb(c("#03034b",
)
critcolors.map <- t(col2rgb(c("#03034b",
"#300b4b",
"#530541",
"#75032f",
"#9c340a",
"#d76b02",
"#f09a06",
"#f4d146")))
critcolors.map
colnames(critcolors.map) <- c("R", "G", "B")
critcolors.map
map <- critcolors.map
map_cols <- grDevices::rgb(map$R, map$G, map$B)
critcolors.map
map
class(map)
critcolors.map <- as.data.frame(t(col2rgb(c("#03034b",
"#300b4b",
"#530541",
"#75032f",
"#9c340a",
"#d76b02",
"#f09a06",
"#f4d146"))))
colnames(critcolors.map) <- c("R", "G", "B")
map <- critcolors.map
map
map_cols <- grDevices::rgb(map$R, map$G, map$B)
?grDevices::rgb
grDevices::rgb(0,0,0)
critcolors.map <- c("#03034b",
"#300b4b",
"#530541",
"#75032f",
"#9c340a",
"#d76b02",
"#f09a06",
"#f4d146")
?colorRamp
fn_cols <- grDevices::colorRamp(critcolors.map, space = "Lab", interpolate = "spline")
fn_cols(seq(0, 1, length.out = 5)) / 255
critcolors.map <- c("#03034b",
"#300b4b",
"#530541",
"#75032f",
"#9c340a",
"#d76b02",
"#f09a06",
"#f4d146")
fn_cols <- grDevices::colorRamp(critcolors.map, space = "Lab", interpolate = "spline")
fn_cols(seq(0, 1, length.out = 5)) / 255
fn_cols(seq(0, 1, length.out = 5))
cols <- fn_cols(seq(0, 1, length.out = 5)) / 255
grDevices::rgb(cols[, 1], cols[, 2], cols[, 3], alpha = alpha)
grDevices::rgb(cols[, 1], cols[, 2], cols[, 3], alpha = 1)
grDevices::rgb(cols[, 1], cols[, 2], cols[, 3], alpha = 0.5)
?discrete_scale
library(ggplot2)
?discrete_scale
?scale_fill_gradientn
?viridis
?scale_fill_viridis_
?scale_fill_viridis
?scale_fill_viridis_b
?scale_color_viridis
document()
library(devtools)
library(roxygen2)
document()
document()
setwd("..")
install("critcolors")
critcolosr(33)
critcolors(33)
?critcolors
plot(rep(1,100),col=(crit_colors(100)), pch=19,cex=2)
plot(rep(1,100),col=(crit_colors(100)), pch=50,cex=2)
plot(rep(1,100),col=(crit_colors(100)), pch=19,cex=20)
plot(rep(1,100),col=(crit_colors(100)), pch=30,cex=20)
plot(rep(1,100),col=(crit_colors(100)), pch=2,cex=20)
plot(rep(1,100),col=(crit_colors(100)), pch=19,cex=20)
plot(rep(1,100),col=(crit_colors(100)), pch=15,cex=20)
plot(rep(1,100),col=(crit_colors(100)), pch=15,cex=20, axes = F)
plot(rep(1,100),col=(crit_colors(100)), pch=15,cex=20, axes = F, labels = F)
plot(rep(1,100),col=(crit_colors(100)), pch=15,cex=20, axes = F, lab = F)
plot(rep(1,100),col=(crit_colors(100)), pch=15,cex=20, axes = F)
plot(rep(1,100),col=(crit_colors(100)), pch=15,cex=20, axes = F, ylab =NA)
plot(rep(1,100),col=(crit_colors(100)), pch=15,cex=20, axes = F, ylab =NA, xlab = NA)
# This creates a new project and directories to save your functions and annotations
create("critcolors")
## Required packages
library("devtools")
library(roxygen2)
# This creates a new project and directories to save your functions and annotations
create("critcolors")
# To create the documentation file based on comments on script
document()
# To create the documentation file based on comments on script
document()
# To create the documentation file based on comments on script
document()
# To create the documentation file based on comments on script
document()
# To create the documentation file based on comments on script
document()
